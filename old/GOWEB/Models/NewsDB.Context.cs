//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GOWEB.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class greenopt_GONewsEntities : DbContext
    {
        public greenopt_GONewsEntities()
            : base("name=greenopt_GONewsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<tblLanguage> tblLanguages { get; set; }
        public virtual DbSet<tblMagazine> tblMagazines { get; set; }
        public virtual DbSet<tblMenu> tblMenus { get; set; }
        public virtual DbSet<tblNew> tblNews { get; set; }
        public virtual DbSet<tblPage> tblPages { get; set; }
    
        public virtual ObjectResult<ComparePageWithMenu_Result> ComparePageWithMenu(Nullable<int> menuID)
        {
            var menuIDParameter = menuID.HasValue ?
                new ObjectParameter("MenuID", menuID) :
                new ObjectParameter("MenuID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComparePageWithMenu_Result>("ComparePageWithMenu", menuIDParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_InsertNews(string title, string descriptions, Nullable<System.DateTime> pubDate, string imageUrl, Nullable<int> magazineID, Nullable<long> viewNumber, Nullable<System.DateTime> dateInserted, string linkUrl)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionsParameter = descriptions != null ?
                new ObjectParameter("Descriptions", descriptions) :
                new ObjectParameter("Descriptions", typeof(string));
    
            var pubDateParameter = pubDate.HasValue ?
                new ObjectParameter("PubDate", pubDate) :
                new ObjectParameter("PubDate", typeof(System.DateTime));
    
            var imageUrlParameter = imageUrl != null ?
                new ObjectParameter("ImageUrl", imageUrl) :
                new ObjectParameter("ImageUrl", typeof(string));
    
            var magazineIDParameter = magazineID.HasValue ?
                new ObjectParameter("MagazineID", magazineID) :
                new ObjectParameter("MagazineID", typeof(int));
    
            var viewNumberParameter = viewNumber.HasValue ?
                new ObjectParameter("ViewNumber", viewNumber) :
                new ObjectParameter("ViewNumber", typeof(long));
    
            var dateInsertedParameter = dateInserted.HasValue ?
                new ObjectParameter("DateInserted", dateInserted) :
                new ObjectParameter("DateInserted", typeof(System.DateTime));
    
            var linkUrlParameter = linkUrl != null ?
                new ObjectParameter("LinkUrl", linkUrl) :
                new ObjectParameter("LinkUrl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_InsertNews", titleParameter, descriptionsParameter, pubDateParameter, imageUrlParameter, magazineIDParameter, viewNumberParameter, dateInsertedParameter, linkUrlParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<spgo_GetAllMagazine_Result> spgo_GetAllMagazine()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spgo_GetAllMagazine_Result>("spgo_GetAllMagazine");
        }
    
        public virtual ObjectResult<spgo_GetAllNews_Result> spgo_GetAllNews()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spgo_GetAllNews_Result>("spgo_GetAllNews");
        }
    
        public virtual ObjectResult<spgo_GetAllRecentNewsTopView_Result> spgo_GetAllRecentNewsTopView()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spgo_GetAllRecentNewsTopView_Result>("spgo_GetAllRecentNewsTopView");
        }
    
        public virtual ObjectResult<spgo_GetLatestNewsOrderByDate_Result> spgo_GetLatestNewsOrderByDate(Nullable<int> startpageid)
        {
            var startpageidParameter = startpageid.HasValue ?
                new ObjectParameter("startpageid", startpageid) :
                new ObjectParameter("startpageid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spgo_GetLatestNewsOrderByDate_Result>("spgo_GetLatestNewsOrderByDate", startpageidParameter);
        }
    
        public virtual ObjectResult<spgo_GetLatestNewsOrderByDateByMGID_Result> spgo_GetLatestNewsOrderByDateByMGID(Nullable<int> mgID, Nullable<int> startpageid)
        {
            var mgIDParameter = mgID.HasValue ?
                new ObjectParameter("mgID", mgID) :
                new ObjectParameter("mgID", typeof(int));
    
            var startpageidParameter = startpageid.HasValue ?
                new ObjectParameter("startpageid", startpageid) :
                new ObjectParameter("startpageid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spgo_GetLatestNewsOrderByDateByMGID_Result>("spgo_GetLatestNewsOrderByDateByMGID", mgIDParameter, startpageidParameter);
        }
    
        public virtual ObjectResult<spgo_GetNewsByID_Result> spgo_GetNewsByID(Nullable<int> newsID)
        {
            var newsIDParameter = newsID.HasValue ?
                new ObjectParameter("NewsID", newsID) :
                new ObjectParameter("NewsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spgo_GetNewsByID_Result>("spgo_GetNewsByID", newsIDParameter);
        }
    
        public virtual ObjectResult<spgo_GetNewsByMgIDOrderByNewsID_Result> spgo_GetNewsByMgIDOrderByNewsID(Nullable<int> mgID)
        {
            var mgIDParameter = mgID.HasValue ?
                new ObjectParameter("mgID", mgID) :
                new ObjectParameter("mgID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spgo_GetNewsByMgIDOrderByNewsID_Result>("spgo_GetNewsByMgIDOrderByNewsID", mgIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spgo_GetPageNumbers(Nullable<int> magazineID)
        {
            var magazineIDParameter = magazineID.HasValue ?
                new ObjectParameter("MagazineID", magazineID) :
                new ObjectParameter("MagazineID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spgo_GetPageNumbers", magazineIDParameter);
        }
    
        public virtual ObjectResult<spgo_LatestNewsPublishDate_Result> spgo_LatestNewsPublishDate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spgo_LatestNewsPublishDate_Result>("spgo_LatestNewsPublishDate");
        }
    
        public virtual ObjectResult<spgo_LatestNewsViewNumber_Result> spgo_LatestNewsViewNumber()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spgo_LatestNewsViewNumber_Result>("spgo_LatestNewsViewNumber");
        }
    }
}
